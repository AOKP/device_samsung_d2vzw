#!/usr/bin/env python
#
# Copyright (C) 2008 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
A shim to generate an OTA for kexec boot
"""

import sys

if sys.hexversion < 0x02040000:
  print >> sys.stderr, "Python 2.4 or newer is required."
  sys.exit(1)

import imp
import os

# grab the releasetools directory and add it to our import path
RELEASETOOLS = os.path.realpath(os.path.join(os.path.dirname(__file__), "..", "..", "..", "..", "build", "tools", "releasetools"))
sys.path.append(RELEASETOOLS)

# import the stuff we're going to overwrite
import common
import edify_generator

common.__ZipWriteStr = common.ZipWriteStr
def ZipWriteStr(zip, filename, data, perms=0644):
  if not filename == "boot.img":
    common.__ZipWriteStr(zip, filename, data, perms)
common.ZipWriteStr = ZipWriteStr

edify_generator.__EdifyGenerator = edify_generator.EdifyGenerator
class EdifyGenerator(edify_generator.__EdifyGenerator):
  def WriteRawImage(self, mount_point, fn):
    if not mount_point == "/boot":
      __EdifyGenerator.WriteRawImage(mount_point, fn)
edify_generator.EdifyGenerator = EdifyGenerator

imp.load_source("ota", os.path.join(RELEASETOOLS, "ota_from_target_files"))
import ota

ota.OPTIONS.extra_script = os.path.realpath(os.path.join(os.path.dirname(__file__), 'extra_script'))

if __name__ == '__main__':
  try:
    ota.main(sys.argv[1:])
  except common.ExternalError, e:
    print
    print "   ERROR: %s" % (e,)
    print
    sys.exit(1)
